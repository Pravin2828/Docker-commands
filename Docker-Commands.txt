   #####################
  Docker commands
#######################

* docker info
* docker version
* docer login
* docker logout
* docker help

####################
docker image commands
####################
* docker images
* docker rmi <image-name>
* docker pull <image-name>
* docker run < image-name>
* docker run -d -p host-port : container
* docker tag <image-name> <image-tag-name>
* docker push <image-tag-name>
* docker history <image-name>
* docker inspect <image-name>
* docker image prune                                    (to delete all unused docker images)

#######################
docker containers command
#######################

* docker ps                                       (to see all running containers)
* docker ps -a                                    (to see all containers)
* docker stop <container Id/name>
*  docker start <container Id/name>
* docker restart <container Id/name>
* docker rm <container Id/name>
* docker logs <container Id/name>
* docker exec -it <container Id/name> /bin/bash
* docker inspect <container Id/name>
* docker export container

######################
docker network command
######################
 
* docker network ls                                               (to see all networks which are available in docker)
* docker network create <network-name>
* docker network rm <network-name>
* docker network inspect <network-name>              (which container associate to this network)

#######################
docker volume command
#######################

* docker volume ls
* docker volume create <volume-name>
* docker volume inspect <volume-name>
*  docker rm <volume-name>
* docker system prune --volumes                                   (to remove all unused volumes)

#########################
docker compose command
#########################

* docker-compose --version
* docker-compose up -d
* docker-compose down                                         (to stop and remove the container)
* docker-compose ps
* docker-compose images
* docker-compose stop                                            (to only stop container)
* docker-compose start

######################
docker swarm commands
######################

* sudo docker swarm init 
* sudo docker swarm join-token worker
* sudo docker swarm join --token <token>
* sudo docker service --name <service-name> -p 8080 : 8080 <image-name>
* sudo docker service scale <service-name> = replicas
* sudo docker service ls
* sudo docker service rm <service-name> 
* sudo docker swarm leave